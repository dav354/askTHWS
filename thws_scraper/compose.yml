services:
  thws_scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scraper
    restart: "no"
    environment:
      LOG_LEVEL: INFO
      EXPORT_CSV_STATS: True
      ENABLE_FILE_LOGGING: True
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB_NAME: ${MONGO_DB}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASS: ${MONGO_PASS}
    env_file: .env
    ports:
      - 7000:7000
    volumes:
      - ./result:/app/result
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - askthws_net

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      askthws_net:
        aliases:
          - mongo
    healthcheck:
      test: |
        mongosh --host localhost --port 27017 --eval 'db.runCommand("ping").ok' --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mongo-express:
     image: mongo-express:latest
     container_name: mongo-express
     restart: always
     ports:
       - "8081:8081"
     environment:
       ME_CONFIG_MONGODB_SERVER: mongodb
       ME_CONFIG_MONGODB_PORT: 27017
       ME_CONFIG_BASICAUTH: "false"
       ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
       ME_CONFIG_MONGODB_AUTH_USERNAME: ${MONGO_USER}
       ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGO_PASS}
       ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
       ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}
     depends_on:
       mongodb:
        condition: service_healthy
     networks:
       - askthws_net

volumes:
  mongodb_data:

networks:
  askthws_net:
